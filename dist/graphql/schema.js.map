{"version":3,"sources":["../../src/graphql/schema.js"],"names":["typeDefs","resolvers"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA,IAAMA,QAAQ,g1BAAd;;eAyCe,wCAAqB;AAC5BA,EAAAA,QAAQ,EAAEA,QADkB;AAE5BC,EAAAA,SAAS,EAAEA;AAFiB,CAArB,C","sourcesContent":["import {makeExecutableSchema} from \"graphql-tools\";\r\n\r\nimport {resolvers} from \"./resolvers\";\r\n\r\nconst typeDefs = `\r\n    type Query{\r\n        users: [User]\r\n        user(_id : ID!): User\r\n    }\r\n\r\n    type Mutation{\r\n        createUser(input: UserInput): User\r\n        deleteUser(_id: ID): User\r\n        updateUser(_id: ID, input: UserInput): User\r\n        login(email:String!, password:String!): AuthData\r\n    }\r\n\r\n    type User{\r\n        _id: ID!\r\n        firstName: String!\r\n        lastName: String!\r\n        userName: String!\r\n        profilePic: String\r\n        email: String!\r\n        phone: String\r\n        password: String\r\n        status: String\r\n    }\r\n\r\n    input UserInput{\r\n        firstName: String!\r\n        lastName: String!\r\n        userName: String!\r\n        profilePic: String\r\n        email: String!\r\n        phone: String\r\n        password: String!\r\n    }\r\n    \r\n    type AuthData {\r\n        userId: ID!\r\n        token: String!\r\n    }\r\n`;\r\n\r\nexport default makeExecutableSchema({\r\n        typeDefs: typeDefs,\r\n        resolvers: resolvers\r\n    }\r\n)"],"file":"schema.js"}